<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bit.dao.TrainMapper" >
  <resultMap id="BaseResultMap" type="bit.model.Train" >
    <id column="train_id" property="trainId" jdbcType="INTEGER" />
    <result column="train_num" property="trainNum" jdbcType="VARCHAR" />
    <result column="train_date" property="trainDate" jdbcType="DATE" />
    <result column="train_carriage" property="trainCarriage" jdbcType="VARCHAR" />
    <result column="train_from" property="trainFrom" jdbcType="INTEGER" />
    <result column="train_to" property="trainTo" jdbcType="INTEGER" />
    <result column="train_client" property="trainClient" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    train_id, train_num, train_date, train_carriage, train_from, train_to, train_client
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from train
    where train_id = #{trainId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from train
    where train_id = #{trainId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="bit.model.Train" >
    insert into train (train_id, train_num, train_date, 
      train_carriage, train_from, train_to, 
      train_client)
    values (#{trainId,jdbcType=INTEGER}, #{trainNum,jdbcType=VARCHAR}, #{trainDate,jdbcType=DATE}, 
      #{trainCarriage,jdbcType=VARCHAR}, #{trainFrom,jdbcType=INTEGER}, #{trainTo,jdbcType=INTEGER}, 
      #{trainClient,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="bit.model.Train" >
    insert into train
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="trainId != null" >
        train_id,
      </if>
      <if test="trainNum != null" >
        train_num,
      </if>
      <if test="trainDate != null" >
        train_date,
      </if>
      <if test="trainCarriage != null" >
        train_carriage,
      </if>
      <if test="trainFrom != null" >
        train_from,
      </if>
      <if test="trainTo != null" >
        train_to,
      </if>
      <if test="trainClient != null" >
        train_client,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="trainId != null" >
        #{trainId,jdbcType=INTEGER},
      </if>
      <if test="trainNum != null" >
        #{trainNum,jdbcType=VARCHAR},
      </if>
      <if test="trainDate != null" >
        #{trainDate,jdbcType=DATE},
      </if>
      <if test="trainCarriage != null" >
        #{trainCarriage,jdbcType=VARCHAR},
      </if>
      <if test="trainFrom != null" >
        #{trainFrom,jdbcType=INTEGER},
      </if>
      <if test="trainTo != null" >
        #{trainTo,jdbcType=INTEGER},
      </if>
      <if test="trainClient != null" >
        #{trainClient,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="bit.model.Train" >
    update train
    <set >
      <if test="trainNum != null" >
        train_num = #{trainNum,jdbcType=VARCHAR},
      </if>
      <if test="trainDate != null" >
        train_date = #{trainDate,jdbcType=DATE},
      </if>
      <if test="trainCarriage != null" >
        train_carriage = #{trainCarriage,jdbcType=VARCHAR},
      </if>
      <if test="trainFrom != null" >
        train_from = #{trainFrom,jdbcType=INTEGER},
      </if>
      <if test="trainTo != null" >
        train_to = #{trainTo,jdbcType=INTEGER},
      </if>
      <if test="trainClient != null" >
        train_client = #{trainClient,jdbcType=INTEGER},
      </if>
    </set>
    where train_id = #{trainId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="bit.model.Train" >
    update train
    set train_num = #{trainNum,jdbcType=VARCHAR},
      train_date = #{trainDate,jdbcType=DATE},
      train_carriage = #{trainCarriage,jdbcType=VARCHAR},
      train_from = #{trainFrom,jdbcType=INTEGER},
      train_to = #{trainTo,jdbcType=INTEGER},
      train_client = #{trainClient,jdbcType=INTEGER}
    where train_id = #{trainId,jdbcType=INTEGER}
  </update>

  <!--<resultMap type="bit.model.Train" id="ServerResultMap" extends="BaseResultMap">-->
    <!--<collection property="orders" ofType="bit.model.Order">-->
      <!--<id column="order_id" property="orderId" jdbcType="INTEGER" />-->
      <!--<result column="order_num" property="orderNum" jdbcType="INTEGER" />-->
      <!--<result column="order_status" property="orderStatus" jdbcType="INTEGER" />-->
      <!--<result column="order_type" property="orderType" jdbcType="INTEGER" />-->
      <!--<result column="order_server" property="orderServer" jdbcType="INTEGER" />-->
      <!--<result column="order_ctime" property="orderCtime" jdbcType="TIMESTAMP" />-->
      <!--<result column="order_rtime" property="orderRtime" jdbcType="TIMESTAMP" />-->
      <!--<result column="order_ftime" property="orderFtime" jdbcType="TIMESTAMP" />-->
      <!--<result column="order_money" property="orderMoney" jdbcType="REAL" />-->
      <!--<result column="order_client" property="orderClient" jdbcType="INTEGER" />-->
      <!--<result column="order_trip" property="orderTrip" jdbcType="INTEGER" />-->
    <!--</collection>-->
  <!--</resultMap>-->

  <!--<select id="selectOrderbyTrainId" resultMap="ServerResultMap" parameterType="java.lang.Integer" >-->
  <!--SELECT torder.order_id,-->
	<!--torder.order_num,-->
	<!--torder.order_status,-->
	<!--torder.order_type,-->
	<!--torder.order_server,-->
	<!--torder.order_ctime,-->
	<!--torder.order_rtime,-->
	<!--torder.order_ftime,-->
	<!--torder.order_money,-->
	<!--torder.order_client,-->
	<!--torder.order_trip,-->
	<!--train.train_id,-->
	<!--train.train_num,-->
	<!--train.train_date,-->
	<!--train.train_carriage,-->
	<!--train.train_from,-->
	<!--train.train_to,-->
	<!--train.train_client-->
<!--FROM torder INNER JOIN train ON torder.order_trip = train.train_id-->
    <!--where train_id = #{trainid,jdbcType=INTEGER}-->
  <!--</select>-->
  <select id="selectTrainbyClientid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from train
    where train_client = #{clientid,jdbcType=INTEGER}
  </select>
</mapper>