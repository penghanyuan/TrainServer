<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bit.dao.ClientMapper" >
  <resultMap id="BaseResultMap" type="bit.model.Client" >
    <id column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="client_name" property="clientName" jdbcType="VARCHAR" />
    <result column="client_tel" property="clientTel" jdbcType="VARCHAR" />
    <result column="client_username" property="clientUsername" jdbcType="VARCHAR" />
    <result column="client_status" property="clientStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    client_id, client_name, client_tel, client_username, client_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from client
    where client_id = #{clientId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from client
    where client_id = #{clientId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="bit.model.Client" >
    insert into client (client_id, client_name, client_tel, 
      client_username, client_status)
    values (#{clientId,jdbcType=INTEGER}, #{clientName,jdbcType=VARCHAR}, #{clientTel,jdbcType=VARCHAR}, 
      #{clientUsername,jdbcType=VARCHAR}, #{clientStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="bit.model.Client" >
    insert into client
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="clientName != null" >
        client_name,
      </if>
      <if test="clientTel != null" >
        client_tel,
      </if>
      <if test="clientUsername != null" >
        client_username,
      </if>
      <if test="clientStatus != null" >
        client_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="clientName != null" >
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientTel != null" >
        #{clientTel,jdbcType=VARCHAR},
      </if>
      <if test="clientUsername != null" >
        #{clientUsername,jdbcType=VARCHAR},
      </if>
      <if test="clientStatus != null" >
        #{clientStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="bit.model.Client" >
    update client
    <set >
      <if test="clientName != null" >
        client_name = #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientTel != null" >
        client_tel = #{clientTel,jdbcType=VARCHAR},
      </if>
      <if test="clientUsername != null" >
        client_username = #{clientUsername,jdbcType=VARCHAR},
      </if>
      <if test="clientStatus != null" >
        client_status = #{clientStatus,jdbcType=INTEGER},
      </if>
    </set>
    where client_id = #{clientId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="bit.model.Client" >
    update client
    set client_name = #{clientName,jdbcType=VARCHAR},
      client_tel = #{clientTel,jdbcType=VARCHAR},
      client_username = #{clientUsername,jdbcType=VARCHAR},
      client_status = #{clientStatus,jdbcType=INTEGER}
    where client_id = #{clientId,jdbcType=INTEGER}
  </update>

  <resultMap type="bit.model.Client" id="OrderResultMap" extends="BaseResultMap">
    <collection property="orders" javaType="list" ofType="bit.model.Order">
      <id column="order_id" property="orderId" jdbcType="INTEGER" />
      <result column="order_num" property="orderNum" jdbcType="INTEGER" />
      <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
      <result column="order_type" property="orderType" jdbcType="INTEGER" />
      <result column="order_server" property="orderServer" jdbcType="INTEGER" />
      <result column="order_ctime" property="orderCtime" jdbcType="TIMESTAMP" />
      <result column="order_rtime" property="orderRtime" jdbcType="TIMESTAMP" />
      <result column="order_ftime" property="orderFtime" jdbcType="TIMESTAMP" />
      <result column="order_money" property="orderMoney" jdbcType="REAL" />
      <result column="order_client" property="orderClient" jdbcType="INTEGER" />
      <result column="order_trip" property="orderTrip" jdbcType="INTEGER" />
      <result column="order_comment" property="orderComment" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <select id="selectOrderbyClientId" resultMap="OrderResultMap" parameterType="java.lang.Integer" >
    SELECT client.client_tel,
    client.client_username,
    client.client_status,
    client.client_name,
    `order`.order_comment,
    `order`.order_trip,
    `order`.order_client,
    `order`.order_money,
    `order`.order_ftime,
    `order`.order_rtime,
    `order`.order_ctime,
    `order`.order_server,
    `order`.order_type,
    `order`.order_status,
    `order`.order_num,
    `order`.order_id,
    client.client_id
    FROM client INNER JOIN `order` ON client.client_id = `order`.order_client
    where client_id = #{clientId,jdbcType=INTEGER}
  </select>

    <resultMap type="bit.model.Client" id="TrainResultMap" extends="BaseResultMap">
        <collection property="trains" javaType="list" ofType="bit.model.Train">
            <id column="train_id" property="trainId" jdbcType="INTEGER" />
            <result column="train_num" property="trainNum" jdbcType="VARCHAR" />
            <result column="train_date" property="trainDate" jdbcType="DATE" />
            <result column="train_carriage" property="trainCarriage" jdbcType="VARCHAR" />
            <result column="train_from" property="trainFrom" jdbcType="INTEGER" />
            <result column="train_to" property="trainTo" jdbcType="INTEGER" />
            <result column="train_client" property="trainClient" jdbcType="INTEGER" />
        </collection>
    </resultMap>
    <select id="selectTrainbyClientId" resultMap="TrainResultMap" parameterType="java.lang.Integer" >
    SELECT client.client_id,
	client.client_name,
	client.client_tel,
	client.client_username,
	client.client_status,
	train.train_id,
	train.train_num,
	train.train_date,
	train.train_carriage,
	train.train_from,
	train.train_to,
	train.train_client
    FROM client INNER JOIN train ON client.client_id = train.train_client
    where client_id = #{clientId,jdbcType=INTEGER}
    </select>
</mapper>