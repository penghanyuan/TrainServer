<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bit.dao.ServerMapper" >
  <resultMap id="BaseResultMap" type="bit.model.Server" >
    <id column="server_id" property="serverId" jdbcType="INTEGER" />
    <result column="server_name" property="serverName" jdbcType="VARCHAR" />
    <result column="server_tel" property="serverTel" jdbcType="VARCHAR" />
    <result column="server_pid" property="serverPid" jdbcType="VARCHAR" />
    <result column="server_num" property="serverNum" jdbcType="VARCHAR" />
    <result column="server_password" property="serverPassword" jdbcType="VARCHAR" />
    <result column="server_code" property="serverCode" jdbcType="VARCHAR" />
    <result column="server_point" property="serverPoint" jdbcType="REAL" />
    <result column="server_photo" property="serverPhoto" jdbcType="VARCHAR" />
    <result column="server_station" property="serverStation" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    server_id, server_name, server_tel, server_pid, server_num, server_password, server_code, 
    server_point, server_photo, server_station
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from server
    where server_id = #{serverId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from server
    where server_id = #{serverId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="bit.model.Server" >
    insert into server (server_id, server_name, server_tel, 
      server_pid, server_num, server_password, 
      server_code, server_point, server_photo, 
      server_station)
    values (#{serverId,jdbcType=INTEGER}, #{serverName,jdbcType=VARCHAR}, #{serverTel,jdbcType=VARCHAR}, 
      #{serverPid,jdbcType=VARCHAR}, #{serverNum,jdbcType=VARCHAR}, #{serverPassword,jdbcType=VARCHAR}, 
      #{serverCode,jdbcType=VARCHAR}, #{serverPoint,jdbcType=REAL}, #{serverPhoto,jdbcType=VARCHAR}, 
      #{serverStation,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="bit.model.Server" >
    insert into server
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serverId != null" >
        server_id,
      </if>
      <if test="serverName != null" >
        server_name,
      </if>
      <if test="serverTel != null" >
        server_tel,
      </if>
      <if test="serverPid != null" >
        server_pid,
      </if>
      <if test="serverNum != null" >
        server_num,
      </if>
      <if test="serverPassword != null" >
        server_password,
      </if>
      <if test="serverCode != null" >
        server_code,
      </if>
      <if test="serverPoint != null" >
        server_point,
      </if>
      <if test="serverPhoto != null" >
        server_photo,
      </if>
      <if test="serverStation != null" >
        server_station,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serverId != null" >
        #{serverId,jdbcType=INTEGER},
      </if>
      <if test="serverName != null" >
        #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="serverTel != null" >
        #{serverTel,jdbcType=VARCHAR},
      </if>
      <if test="serverPid != null" >
        #{serverPid,jdbcType=VARCHAR},
      </if>
      <if test="serverNum != null" >
        #{serverNum,jdbcType=VARCHAR},
      </if>
      <if test="serverPassword != null" >
        #{serverPassword,jdbcType=VARCHAR},
      </if>
      <if test="serverCode != null" >
        #{serverCode,jdbcType=VARCHAR},
      </if>
      <if test="serverPoint != null" >
        #{serverPoint,jdbcType=REAL},
      </if>
      <if test="serverPhoto != null" >
        #{serverPhoto,jdbcType=VARCHAR},
      </if>
      <if test="serverStation != null" >
        #{serverStation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="bit.model.Server" >
    update server
    <set >
      <if test="serverName != null" >
        server_name = #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="serverTel != null" >
        server_tel = #{serverTel,jdbcType=VARCHAR},
      </if>
      <if test="serverPid != null" >
        server_pid = #{serverPid,jdbcType=VARCHAR},
      </if>
      <if test="serverNum != null" >
        server_num = #{serverNum,jdbcType=VARCHAR},
      </if>
      <if test="serverPassword != null" >
        server_password = #{serverPassword,jdbcType=VARCHAR},
      </if>
      <if test="serverCode != null" >
        server_code = #{serverCode,jdbcType=VARCHAR},
      </if>
      <if test="serverPoint != null" >
        server_point = #{serverPoint,jdbcType=REAL},
      </if>
      <if test="serverPhoto != null" >
        server_photo = #{serverPhoto,jdbcType=VARCHAR},
      </if>
      <if test="serverStation != null" >
        server_station = #{serverStation,jdbcType=INTEGER},
      </if>
    </set>
    where server_id = #{serverId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="bit.model.Server" >
    update server
    set server_name = #{serverName,jdbcType=VARCHAR},
      server_tel = #{serverTel,jdbcType=VARCHAR},
      server_pid = #{serverPid,jdbcType=VARCHAR},
      server_num = #{serverNum,jdbcType=VARCHAR},
      server_password = #{serverPassword,jdbcType=VARCHAR},
      server_code = #{serverCode,jdbcType=VARCHAR},
      server_point = #{serverPoint,jdbcType=REAL},
      server_photo = #{serverPhoto,jdbcType=VARCHAR},
      server_station = #{serverStation,jdbcType=INTEGER}
    where server_id = #{serverId,jdbcType=INTEGER}
  </update>

  <resultMap type="bit.model.Server" id="OrderResultMap" extends="BaseResultMap">
    <collection property="orders" javaType="list" ofType="bit.model.Order">
      <id column="order_id" property="orderId" jdbcType="INTEGER" />
      <result column="order_num" property="orderNum" jdbcType="INTEGER" />
      <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
      <result column="order_type" property="orderType" jdbcType="INTEGER" />
      <result column="order_server" property="orderServer" jdbcType="INTEGER" />
      <result column="order_ctime" property="orderCtime" jdbcType="TIMESTAMP" />
      <result column="order_rtime" property="orderRtime" jdbcType="TIMESTAMP" />
      <result column="order_ftime" property="orderFtime" jdbcType="TIMESTAMP" />
      <result column="order_money" property="orderMoney" jdbcType="REAL" />
      <result column="order_client" property="orderClient" jdbcType="INTEGER" />
      <result column="order_trip" property="orderTrip" jdbcType="INTEGER" />
      <result column="order_comment" property="orderComment" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <select id="selectOrderbyServerId" resultMap="OrderResultMap" parameterType="java.lang.Integer" >
   SELECT `server`.server_id,
    `server`.server_name,
	`server`.server_tel,
	`server`.server_pid,
	`server`.server_num,
	`server`.server_password,
	`server`.server_code,
	`server`.server_point,
	`server`.server_photo,
	`server`.server_station,
	`order`.order_id,
	`order`.order_num,
	`order`.order_status,
	`order`.order_type,
	`order`.order_server,
	`order`.order_ctime,
	`order`.order_rtime,
	`order`.order_ftime,
	`order`.order_money,
	`order`.order_client,
	`order`.order_trip,
	`order`.order_comment
FROM `order` INNER JOIN `server` ON `order`.order_server = `server`.server_id
    where server_id = #{serverId,jdbcType=INTEGER}
  </select>

  <resultMap type="bit.model.Server" id="CommentResultMap" extends="BaseResultMap">
    <collection property="comments" javaType="list" ofType="bit.model.Comment">
      <id column="comm_id" property="commId" jdbcType="INTEGER" />
      <result column="comm_star" property="commStar" jdbcType="INTEGER" />
      <result column="comm_context" property="commContext" jdbcType="VARCHAR" />
      <result column="comm_client" property="commClient" jdbcType="INTEGER" />
      <result column="comm_server" property="commServer" jdbcType="INTEGER" />
      <result column="comm_datetime" property="commDatetime" jdbcType="TIMESTAMP" />
      <result column="comm_status" property="commStatus" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <select id="selectCommentbyServerId" resultMap="CommentResultMap" parameterType="java.lang.Integer" >
    SELECT `server`.server_id,
	`server`.server_name,
	`server`.server_tel,
	`server`.server_pid,
	`server`.server_num,
	`server`.server_password,
	`server`.server_code,
	`server`.server_point,
	`server`.server_photo,
	`server`.server_station,
	`comment`.comm_id,
	`comment`.comm_star,
	`comment`.comm_context,
	`comment`.comm_client,
	`comment`.comm_server,
	`comment`.comm_datetime,
	`comment`.comm_status,
	`comment`.comm_orderid
    FROM `server` INNER JOIN `comment` ON `server`.server_id = `comment`.comm_server
    where server_id = #{serverId,jdbcType=INTEGER}
  </select>

  <select id="selectByUserName" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from server
    where server_tel = #{username}
  </select>
</mapper>